[0m[[0m[0mdebug[0m] [0m[0m> Exec(collectAnalyses, None, Some(CommandSource(network-1)))[0m
[0m[[0m[0mdebug[0m] [0m[0munmatched Processing event for requestId None: None[0m
[0m[[0m[0mdebug[0m] [0m[0mEvaluating tasks: Compile / collectAnalyses[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning task... Cancel: Signal, check cycles: false, forcegc: true[0m
[0m[[0m[0mdebug[0m] [0m[0mUnhandled notification received: initialized: JsonRpcNotificationMessage(2.0, initialized, {})[0m
[0m[[0m[0mdebug[0m] [0m[0manalysis location (C:\DeV\ScalaProjects\BigDataProject0\recursion\target\scala-2.13\zinc\inc_compile_2.13.zip,true)[0m
[0m[[0m[32msuccess[0m] [0m[0mTotal time: 0 s, completed 26-Mar-2023, 10:12:28 PM[0m
[0m[[0m[0mdebug[0m] [0m[0munmatched Done event for requestId None: None[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(shell, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0mUnhandled notification received: textDocument/didOpen: JsonRpcNotificationMessage(2.0, textDocument/didOpen, {"textDocument":{"uri":"file:///c%3A/DeV/ScalaProjects/BigDataProject0/recursion/src/main/scala/recursion/Main.scala","languageId":"scala","version":1,"text":"package recfun\nimport common._\n\nobject Main {\n\n  /**\n   * Exercise 1\n   */\n  def balance(chars: String): Boolean = {\n    \n    def balance_aux(l: List[Char], c: Int): Boolean ={\n      if (c < 0) false\n\n      else if (l.isEmpty) {\n        if (c==0) true else false\n      }\n      \n      else if (l.head == '(') balance_aux(l.tail, c+1)\n      else if (l.head == ')') balance_aux(l.tail ,c-1)\n      else balance_aux(l.tail,c)\n\n    }\n    balance_aux(chars.toList, 0)\n  }\n\n  \n\n  /**\n   * Exercise 2\n   */\n  def countChange(money: Int, coins: List[Int]): Int = {\n    if (money == 0) {\n    1\n  } else if (money < 0 || coins.isEmpty) {\n    0 \n  } else {\n\n    countChange(money - coins.head, coins) + countChange(money, coins.tail)\n  }\n\n  }\n\n}\n\n"}})[0m
[0m[[0m[0mdebug[0m] [0m[0mUnhandled notification received: textDocument/didClose: JsonRpcNotificationMessage(2.0, textDocument/didClose, {"textDocument":{"uri":"file:///c%3A/DeV/ScalaProjects/BigDataProject0/recursion/src/main/scala/recursion/Main.scala"}})[0m
[0m[[0m[0mdebug[0m] [0m[0mUnhandled notification received: textDocument/didOpen: JsonRpcNotificationMessage(2.0, textDocument/didOpen, {"textDocument":{"uri":"file:///c%3A/DeV/ScalaProjects/BigDataProject0/recursion/src/test/scala/recursion/BalanceSuite.scala","languageId":"scala","version":1,"text":"package recfun\n\nimport org.scalatest.funsuite.AnyFunSuite\n\nclass BalanceSuite extends AnyFunSuite {\n  \n  import Main.balance\n\n  test(\"balance: '(if (zero? x) max (/ 1 x))' is balanced\") {\n    assert(balance(\"(if (zero? x) max (/ 1 x))\"))\n  }\n\n  test(\"balance: 'I told him ...' is balanced\") {\n    assert(balance(\"I told him (that it's not (yet) done).\\n(But he wasn't listening)\"))\n  }\n\n  test(\"balance: ':-)' is unbalanced\") {\n    assert(!balance(\":-)\"))\n  }\n\n  test(\"balance: counting is not enough\") {\n    assert(!balance(\"())(\"))\n  }\n}\n"}})[0m
