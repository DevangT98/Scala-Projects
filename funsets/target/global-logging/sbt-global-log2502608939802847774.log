[0m[[0m[0mdebug[0m] [0m[0m> Exec(;Test/compile; collectAnalyses, None, Some(CommandSource(network-1)))[0m
[0m[[0m[0mdebug[0m] [0m[0munmatched Processing event for requestId None: None[0m
[0m[[0m[0mdebug[0m] [0m[0munmatched Done event for requestId None: None[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(Test/compile, None, Some(CommandSource(network-1)))[0m
[0m[[0m[0mdebug[0m] [0m[0munmatched Processing event for requestId None: None[0m
[0m[[0m[0mdebug[0m] [0m[0mEvaluating tasks: Test / compile[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning task... Cancel: Signal, check cycles: false, forcegc: true[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/taskStart, {"taskId":{"id":"11","parents":[]},"eventTime":1679894815538,"message":"Compiling funsets","dataKind":"compile-task","data":{"target":{"uri":"file:/C:/DeV/funsets/#funsets/Compile"}}})[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/taskFinish, {"taskId":{"id":"11","parents":[]},"eventTime":1679894815548,"message":"Compiled funsets","status":1,"dataKind":"compile-report","data":{"target":{"uri":"file:/C:/DeV/funsets/#funsets/Compile"},"errors":0,"warnings":0,"time":10}})[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/taskStart, {"taskId":{"id":"12","parents":[]},"eventTime":1679894815557,"message":"Compiling funsets-test","dataKind":"compile-task","data":{"target":{"uri":"file:/C:/DeV/funsets/#funsets/Test"}}})[0m
[0m[[0m[0minfo[0m] [0m[0mcompiling 1 Scala source to C:\DeV\funsets\target\scala-2.13\test-classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/logMessage, {"type":3,"message":"compiling 1 Scala source to C:\\DeV\\funsets\\target\\scala-2.13\\test-classes ..."})[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/taskProgress, {"taskId":{"id":"12","parents":[]},"eventTime":1679894815895,"message":"Compiling funsets-test (15%)","total":26,"progress":15,"dataKind":"compile-progress","data":{"target":{"uri":"file:/C:/DeV/funsets/#funsets/Test"}}})[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/taskProgress, {"taskId":{"id":"12","parents":[]},"eventTime":1679894815896,"message":"Compiling funsets-test (15%)","total":26,"progress":15,"dataKind":"compile-progress","data":{"target":{"uri":"file:/C:/DeV/funsets/#funsets/Test"}}})[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/taskProgress, {"taskId":{"id":"12","parents":[]},"eventTime":1679894815948,"message":"Compiling funsets-test (30%)","total":26,"progress":30,"dataKind":"compile-progress","data":{"target":{"uri":"file:/C:/DeV/funsets/#funsets/Test"}}})[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/taskProgress, {"taskId":{"id":"12","parents":[]},"eventTime":1679894815949,"message":"Compiling funsets-test (30%)","total":26,"progress":30,"dataKind":"compile-progress","data":{"target":{"uri":"file:/C:/DeV/funsets/#funsets/Test"}}})[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/taskProgress, {"taskId":{"id":"12","parents":[]},"eventTime":1679894816014,"message":"Compiling funsets-test (50%)","total":26,"progress":50,"dataKind":"compile-progress","data":{"target":{"uri":"file:/C:/DeV/funsets/#funsets/Test"}}})[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/taskProgress, {"taskId":{"id":"12","parents":[]},"eventTime":1679894816015,"message":"Compiling funsets-test (50%)","total":26,"progress":50,"dataKind":"compile-progress","data":{"target":{"uri":"file:/C:/DeV/funsets/#funsets/Test"}}})[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/taskProgress, {"taskId":{"id":"12","parents":[]},"eventTime":1679894816167,"message":"Compiling funsets-test (65%)","total":26,"progress":65,"dataKind":"compile-progress","data":{"target":{"uri":"file:/C:/DeV/funsets/#funsets/Test"}}})[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/taskProgress, {"taskId":{"id":"12","parents":[]},"eventTime":1679894816167,"message":"Compiling funsets-test (65%)","total":26,"progress":65,"dataKind":"compile-progress","data":{"target":{"uri":"file:/C:/DeV/funsets/#funsets/Test"}}})[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/taskProgress, {"taskId":{"id":"12","parents":[]},"eventTime":1679894816184,"message":"Compiling funsets-test (80%)","total":26,"progress":80,"dataKind":"compile-progress","data":{"target":{"uri":"file:/C:/DeV/funsets/#funsets/Test"}}})[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/taskProgress, {"taskId":{"id":"12","parents":[]},"eventTime":1679894816185,"message":"Compiling funsets-test (80%)","total":26,"progress":80,"dataKind":"compile-progress","data":{"target":{"uri":"file:/C:/DeV/funsets/#funsets/Test"}}})[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/taskProgress, {"taskId":{"id":"12","parents":[]},"eventTime":1679894816258,"message":"Compiling funsets-test (100%)","total":26,"progress":100,"dataKind":"compile-progress","data":{"target":{"uri":"file:/C:/DeV/funsets/#funsets/Test"}}})[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/taskProgress, {"taskId":{"id":"12","parents":[]},"eventTime":1679894816258,"message":"Compiling funsets-test (100%)","total":26,"progress":100,"dataKind":"compile-progress","data":{"target":{"uri":"file:/C:/DeV/funsets/#funsets/Test"}}})[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/taskFinish, {"taskId":{"id":"12","parents":[]},"eventTime":1679894816269,"message":"Compiled funsets-test","status":1,"dataKind":"compile-report","data":{"target":{"uri":"file:/C:/DeV/funsets/#funsets/Test"},"errors":0,"warnings":0,"time":712}})[0m
[0m[[0m[32msuccess[0m] [0m[0mTotal time: 1 s, completed 27-Mar-2023, 1:26:56 AM[0m
[0m[[0m[0mdebug[0m] [0m[0munmatched Done event for requestId None: None[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(collectAnalyses, None, Some(CommandSource(network-1)))[0m
[0m[[0m[0mdebug[0m] [0m[0munmatched Processing event for requestId None: None[0m
[0m[[0m[0mdebug[0m] [0m[0mEvaluating tasks: Compile / collectAnalyses[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning task... Cancel: Signal, check cycles: false, forcegc: true[0m
[0m[[0m[0mdebug[0m] [0m[0manalysis location (C:\DeV\funsets\target\scala-2.13\zinc\inc_compile_2.13.zip,true)[0m
[0m[[0m[32msuccess[0m] [0m[0mTotal time: 0 s, completed 27-Mar-2023, 1:26:56 AM[0m
[0m[[0m[0mdebug[0m] [0m[0munmatched Done event for requestId None: None[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(shell, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0mUnhandled notification received: textDocument/didClose: JsonRpcNotificationMessage(2.0, textDocument/didClose, {"textDocument":{"uri":"file:///c%3A/DeV/funsets/src/test/scala/funsets/FunSetsSuite.scala"}})[0m
[0m[[0m[0mdebug[0m] [0m[0mUnhandled notification received: textDocument/didOpen: JsonRpcNotificationMessage(2.0, textDocument/didOpen, {"textDocument":{"uri":"file:///c%3A/DeV/funsets/src/main/scala/funsets/Main.scala","languageId":"scala","version":1,"text":"package funsets\n\nobject Main extends App {\n  import FunSets._\n  println(\"The statement \\\"{1} contains 1\\\" is \" + contains(x => x==1, 1) + \".\")\n\n  val singleton3: IntSet = singletonSet(3)\n  println(contains(singleton3,3) + \".\")\n\n  val even_set: IntSet = (x: Int) => x % 2 == 0\n  val odd_set: IntSet = (x: Int) => x % 2 == 1\n\n  // Compute the union of the two sets\n  val numbers: IntSet = union(even_set, odd_set)\n\n  // Test the resulting set by checking if it contains some elements\n  println(contains(numbers, 2)) \n  println(contains(numbers, 3)) \n\n  val set1: IntSet = (x: Int) => x < 5\n  val set2: IntSet = (x: Int) => x > 3\n  val set3: IntSet = (x: Int) => x % 2 == 0\n\n  val numbers1: IntSet = intersect(set1,set2)\n  \n  val numbers2: IntSet = intersect(set1,set3)\n  \n  println(contains(numbers1, 4)) \n  println(contains(numbers2, 3)) \n\n  val evenNumbers: IntSet = (x: Int) => x % 2 == 0\n\n  //Create a new set containing only even numbers that are greater than 5\n  val filteredSet: IntSet = filter(evenNumbers, (x: Int) => x > 5)\n\n  // Test the resulting set by checking if it contains some elements\n  println(contains(filteredSet, 2)) // false\n  println(contains(filteredSet, 4)) // false\n  println(contains(filteredSet, 6)) // true\n  println(contains(filteredSet, 8)) // true\n\n\n//val evenNumbers: IntSet = (x: Int) => x % 2 == 0\n\n  // Check if all even numbers greater than 5 are also greater than 3\n  val result: Boolean = forall(evenNumbers, (x: Int) => x > 3)\n\n  println(result) \n\n  // Define an IntSet object\n  val mySet: IntSet = (x: Int) => x >= 0 && x <= 10\n\n  // Define a function that multiplies an integer by 2\n  def double(x: Int): Int = x * 2\n\n  // Apply the map function to mySet and double\n  val mappedSet: IntSet = map(mySet, double)\n\n  // Test the mappedSet by checking some values\n  println(mappedSet(5)) // Output: true, because 5 * 2 = 10, which is within the range of mySet\n  println(mappedSet(15)) // Output: false, because 15 * 2 = 30, which is outside the range of mySet\n}\n"}})[0m
[0m[[0m[0mdebug[0m] [0m[0mUnhandled notification received: textDocument/didOpen: JsonRpcNotificationMessage(2.0, textDocument/didOpen, {"textDocument":{"uri":"file:///c%3A/DeV/funsets/src/test/scala/funsets/FunSetsSuite.scala","languageId":"scala","version":23,"text":"package funsets\n\nimport org.scalatest.funsuite.AnyFunSuite\n\nclass FunSetsSuite extends AnyFunSuite {\n  \n  import FunSets._\n\n  /**\n   * Link to the scaladoc - very clear and detailed tutorial of AnyFunSuite:\n   *\n   * https://www.scalatest.org/scaladoc/3.2.15/org/scalatest/funsuite/AnyFunSuite.html\n   *\n   * Operators\n   *  - test\n   *  - ignore\n   *  - pending\n   */\n\n  /**\n   * Tests are written using the \"test\" operator and the \"assert\" method.\n   */\n  test(\"string take\") {\n    val message = \"hello, world\"\n    assert(message.take(5) == \"hello\")\n  }\n\n  /**\n   * For ScalaTest tests, there exists a special equality operator \"===\" that\n   * can be used inside \"assert\". If the assertion fails, the two values will\n   * be printed in the error message. Otherwise, when using \"==\", the test\n   * error message will only say \"assertion failed\", without showing the values.\n   *\n   * Try it out! Change the values so that the assertion fails, and look at the\n   * error message.\n   */\n  test(\"adding ints\") {\n    assert(1 + 2 === 3)\n  }\n  \n  test(\"contains is implemented\") {\n    assert(contains(x => true, 100))\n  }\n  \n  /**\n   * When writing tests, one would often like to re-use certain values for multiple\n   * tests. For instance, we would like to create an Int-set and have multiple test\n   * about it.\n   * \n   * Instead of copy-pasting the code for creating the set into every test, we can\n   * store it in the test class using a val:\n   * \n   *   val s1 = singletonSet(1)\n   * \n   * However, what happens if the method \"singletonSet\" has a bug and crashes? Then\n   * the test methods are not even executed, because creating an instance of the\n   * test class fails!\n   * \n   * Therefore, we put the shared values into a separate trait (traits are like\n   * abstract classes), and create an instance inside each test method.\n   * \n   */\n\n  trait TestSets {\n    val s1 = singletonSet(1)\n    val s2 = singletonSet(2)\n    val s3 = singletonSet(3)\n  }\n\n  /**\n   * This test is currently disabled (by using \"ignore\") because the method\n   * \"singletonSet\" is not yet implemented and the test would fail.\n   * \n   * Once you finish your implementation of \"singletonSet\", exchange the\n   * function \"ignore\" by \"test\".\n   */\n  test(\"singletonSet(1) contains 1\") {\n    \n    /**\n     * We create a new instance of the \"TestSets\" trait, this gives us access\n     * to the values \"s1\" to \"s3\". \n     */\n    new TestSets {\n      /**\n       * The string argument of \"assert\" is a message that is printed in case\n       * the test fails. This helps identifying which assertion failed.\n       */\n      assert(contains(s1, 1), \"Singleton\")\n    \n    }\n  }\n\n  test(\"union contains all elements\") {\n    new TestSets {\n      val s = union(s1, s2)\n      assert(contains(s, 1), \"Union 1\")\n      assert(contains(s, 2), \"Union 2\")\n      assert(!contains(s, 3), \"Union 3\")\n    }\n  }\n}\n"}})[0m
[0m[[0m[0mdebug[0m] [0m[0mUnhandled notification received: textDocument/didClose: JsonRpcNotificationMessage(2.0, textDocument/didClose, {"textDocument":{"uri":"file:///c%3A/DeV/funsets/src/main/scala/funsets/Main.scala"}})[0m
[0m[[0m[0mdebug[0m] [0m[0mlsp-definition json request: {"textDocument":{"uri":"file:///c%3A/DeV/funsets/src/test/scala/funsets/FunSetsSuite.scala"},"position":{"line":40,"character":25}}[0m
[0m[[0m[0mdebug[0m] [0m[0mlsp-definition found line:   test("contains is implemented") {[0m
[0m[[0m[0mdebug[0m] [0m[0mUnhandled notification received: $/cancelRequest: JsonRpcNotificationMessage(2.0, $/cancelRequest, {"id":5})[0m
[0m[[0m[0mdebug[0m] [0m[0mlsp-definition json request: {"textDocument":{"uri":"file:///c%3A/DeV/funsets/src/test/scala/funsets/FunSetsSuite.scala"},"position":{"line":41,"character":26}}[0m
[0m[[0m[0mdebug[0m] [0m[0mlsp-definition found line:     assert(contains(x => true, 100))[0m
[0m[[0m[0mdebug[0m] [0m[0msymbol rue[0m
[0m[[0m[0mdebug[0m] [0m[0mlsp-definition potentials: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mlsp-definition locations Vector()[0m
[0m[[0m[0mdebug[0m] [0m[0msymbol implemented[0m
[0m[[0m[0mdebug[0m] [0m[0mlsp-definition potentials: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mlsp-definition locations Vector()[0m
[0m[[0m[0mdebug[0m] [0m[0mUnhandled notification received: textDocument/didClose: JsonRpcNotificationMessage(2.0, textDocument/didClose, {"textDocument":{"uri":"file:///c%3A/DeV/funsets/src/test/scala/funsets/FunSetsSuite.scala"}})[0m
